/* lox grammar */

program        ->      declaration* EOF

// Any place where a declaration is allowed also allows non-declaring
// statements, so the declaration rule falls through to statement
declaration    ->      classDecl | funDecl | varDecl | statement

classDecl      ->      "class" IDENTIFIER ( "<" IDENTIFIER )? "{" function* "}"
funDecl        ->      "fun" function
function       ->      IDENTIFIER "(" parameters? ")" block
parameters     ->      IDENTIFIER ( "," IDENTIFIER )*
varDecl        ->      "var" IDENTIFIER ( "=" expression )? ";"
statement      ->      exprStmt | forStmt | ifStmt | printStmt | returnStmt | whileStmt | block | break
returnStmt     ->      "return" expression? ";"
forStmt        ->      "for" "(" ( varDecl | exprStmt | ";" ) expression? ";" expression? ")) statement
whileStmt      ->      "while" "(" expression ")" ( statement | break )
break          ->      "break" ";"
ifStmt         ->      "if" "(" expression ")" statement ( "else" statement )?
block          ->      "{" declaration* "}"
exprStmt       ->      expression ";"
printStmt      ->      "print" expression ";"

expression     ->      assignment
assignment     ->      ( call "." )? IDENTIFIER "=" assignment | logic_or
logic_or       ->      logic_and ( "or" logic_and )*
logic_and      ->      equality ( "and" equality )*
equality       ->      comparison ( ( "!=" | "==" ) comparison )*
comparison     ->      term ( ( ">" | ">=" | "<" | "<=" ) term )*
term           ->      factor ( ( "-" | "+" ) factor )*
factor         ->      unary ( ( "/" | "*" ) unary )*
unary          ->      ( "!" | "-" ) unary | call
call           ->      primary ( "(" arguments? ")" | "." IDENTIFIER )*
primary        ->      "true" | "false" | "nil" | "this" | NUMBER | STRING | IDENTIFIER | "(" expression ")" | "super" "." IDENTIFIER


/*
- each rule needs to match expressions at that precedence level or higher,

|----------------|---------------|----------------|
|     Name 	     |   Operators   |   Associates   | 
|----------------|---------------|----------------|
|   Equality 	   |     == !=     |     Left       |
|   Comparison   |   > >= < <=   |     Left       |
|   Term 	       |      - +      |     Left       |
|   Factor 	     |      / *      |     Left       |
|   Unary 	     |      ! -      |     Right      |
|----------------|---------------|----------------|
*/
